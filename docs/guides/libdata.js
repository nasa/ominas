/* Index used for searching */
/*
   Fields used:
     url, name, type, filename, authors, routine name, comments, parameters,
     categories, and attributes
*/
title = "OMINAS Documentation";
subtitle = "Generated by IDLdoc";
libdata = new Array();
libdataItem = 0;



libdata[libdataItem++] = new Array("./install_guide.html", "install_guide.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "install_guide.pro", "", "", "	User Installation Guide  	This guide will cover the installation of OMINAS and common issues with 	configuration, as well as present some common errors and possible 	solutions. Please see the section entitled Troubleshooting for more 	information regarding installation issues with OMINAS.  	Requirements  	Currently OMINAS requires IDL 8.2.3 or above, and a bash shell, on Linux or 	Mac OS.  	To process data sets from a particular mission, that mission's kernels will 	need to be available. The OMINAS installer can automatically download sets of 	kernels for several missions (e.g. Cassini, Galileo, Voyager, Dawn).  	OMINAS' SPICE translator makes use of the NAIF Icy Toolkit to process SPICE kernels. 	The Icy toolkit may optionally be obtained manually from 	NAIF. However, the 	installer utility provided with OMINAS can download and compile Icy 	into your current directory. Installation of Icy is somewhat platform-dependent, 	so troubleshooting information can be found in Troubleshooting.  	Procedure  	1. Please ensure that OMINAS has been properly downloaded from the 	Github repository by creating a 	directory for the installation and entering the following command at the terminal: <code class= source > git clone https://github.com/nasa/ominas</code> 	A local copy of the OMINAS source will be cloned automatically.  	2. Configuration of OMINAS should be performed using the configuration 	script, configure.sh, which is located in the top-level ominas directory. 	This script can be run from the command line with: <code class= source > source configure.sh</code> 	3. A prompt will appear asking which packages should be installed. The 	user should type the numbers of the desired packages separated by spaces. 	We recomend, at a minimum, setting up packages 1, 2 and 3 (OMINAS Core, Demo and Icy). 	To automatically download and setup all the packages, use the all option.  	4. When setting up an individual kernel or data package (selections 4-13), 	one can either provide a path for an existing directory containing the required files, 	or tell the installer to download them.  	5. Test the install of OMINAS has been completed correctly by running the 	the following example scripts: <code class= source > ominas override_example.pro</code> <code class= source > ominas pg_example.pro</code> 	6. A successful Icy installation can be tested with the following IDL 	command from within an OMINAS IDL session: <code class= source > help, 'icy', /dlm</code> 	Some text on the installed version of Icy should be displayed. Additionally, 	use the following command: <code class= source > print, cspice_tkvrsn('TOOLKIT')</code> 	The version of Icy should be printed. If both of these functions return 	successfully, then Icy has been installed correctly.   Example installation walkthrough   From a fresh account (that never had OMINAS, Icy or any IDL libraries setup  before), for the 3 main packages (Core, Demo and Icy): <code class= source > ;[ominas_test_8@cmp ~]$ git clone https://github.com/nasa/ominas.git</code> <code class= source > ;Cloning into 'ominas'...</code> <code class= source > ;Username for 'https://github.com': ppenteado</code> <code class= source > ;Password for 'https://nasa@github.com':</code> <code class= source > ;remote: Counting objects: 13377, done.</code> <code class= source > ;remote: Compressing objects: 100% (85/85), done.</code> <code class= source > ;remote: Total 13377 (delta 51), reused 71 (delta 34), pack-reused 13258</code> <code class= source > ;Receiving objects: 100% (13377/13377), 200.48 MiB | 8.10 MiB/s, done.</code> <code class= source > ;Resolving deltas: 100% (7628/7628), done.</code> <code class= source > ;Checking connectivity... done.</code> <code class= source > ;Checking out files: 100% (3479/3479), done.</code>  At this point, a copy of OMINAS will be in a newly-created directory called  ominas, under the current directory. Note that if a non-empty ominas directory  was already present, git would notice it and refuse to download OMINAS into that  directory.    Now, getting into the ominas directory and running the installer: <code class= source >;[ominas_test_8@cmp ~]$ cd ominas/</code> <code class= source >;[ominas_test_8@cmp ominas]$ source configure.sh</code> <code class= source >;Detecting .bash_profile...</code> <code class= source >;.bash_profile detected!</code> <code class= source >;Detecting .bashrc...</code> <code class= source >;.bashrc detected!</code> <code class= source >;Using IDL at /usr/local/bin/idl</code> <code class= source >;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</code> <code class= source >;Installation number: XXXXXX.</code> <code class= source >;Licensed for use by: XXXXXX</code> <code class= source >;</code> <code class= source >;Creating ~/.ominas directory</code> <code class= source >;Creating ~/ominas_data directory</code> <code class= source >;The setup will guide you through the installation of OMINAS</code> <code class= source >;OMINAS files located in /home/ominas_test_8/ominas</code> <code class= source >;</code> <code class= source >;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</code> <code class= source >;Installation number: XXXXX.</code> <code class= source >;Licensed for use by: XXXXX</code> <code class= source >;</code> <code class= source >;% Compiled module: OMINAS_ICY_TEST.</code> <code class= source >;Icy: Icy not found</code> <code class= source >;Current OMINAS configuration settings</code> <code class= source >;Required:</code> <code class= source >;1) OMINAS Core  . . . . . . . . . . . . .  NOT CONFIGURED</code> <code class= source >;Contains the OMINAS code. If you select only one</code> <code class= source >;of the other packages, this will be included.</code> <code class= source >;Optional packages:</code> <code class= source >;2) Demo package . . . . . . . . . . . . .  NOT CONFIGURED</code> <code class= source >;Contains the demo scripts and the data required</code> <code class= source >;to run then.</code> <code class= source >;These files are always present (in ominas/demo),</code> <code class= source >;this option is to set up the environment so that</code> <code class= source >;the demos can be run.</code> <code class= source >;3) SPICE Icy  . . . . . . . . . . . . . .  NOT CONFIGURED</code> <code class= source >;Library maintained by JPL's NAIF (Navigation and Ancillary</code> <code class= source >;Information Facility, https://naif.jpl.nasa.gov/naif/toolkit.html,</code> <code class= source >;required to use spacecraft / planetary kernel files.</code> <code class= source >;</code> <code class= source >;Mission Packages:</code> <code class= source >;Kernels used for each mission's position and</code> <code class= source >;pointing data. If you do not already have them,</code> <code class= source >;an option to download them from PDS will be provided.</code> <code class= source >;If you already have them, you will need to provide</code> <code class= source >;the path to your kernel files.</code> <code class= source >;Note: the NAIF Generic Kernels (one of the optional</code> <code class= source >;data packages) are not required for the missions, they</code> <code class= source >;already contain a copy the subset of the generic kernel</code> <code class= source >;files they need.</code> <code class= source >;4) Cassini . . . . . . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;Subsetted, about 16 GB as of Dec/2016</code> <code class= source >;5) Galileo (GLL) . . . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;About 833 MB as of Dec/2016</code> <code class= source >;6) Voyager . . . . . . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;About 163 MB as of Dec/2016</code> <code class= source >;7) Dawn  . . . . . . . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;Subsetted, about 8 GB as of Jan/2017</code> <code class= source >;Data:</code> <code class= source >;8) NAIF Generic Kernels . . . . . . . . .  NOT CONFIGURED</code> <code class= source >;About 22 GB as of Dec/2016</code> <code class= source >;9) SEDR image data . . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;10) TYCHO2 star catalog . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;About 161 MB download, 665 MB unpacked</code> <code class= source >;11) SAO star catalog . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;About 19 MB download, 70 MB unpacked</code> <code class= source >;12) GSC star catalog . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;13) UCAC4 star catalog . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;About 8.5 GB download</code> <code class= source >;For more information, see</code> <code class= source >;https://nasa.github.io/ominas_doc/demo/install_guide.html</code> <code class= source >;Modify Current OMINAS configuration (Exit/Auto/Uninstall 1 2 ...)?  1 2 3</code> <code class= source >;Settiing OMINAS Core...</code> <code class= source >;OMINAS requires the NAIF Icy toolkit to process SPICE kernels.</code> <code class= source >;Would you like to install Icy from the internet now? [y]</code> <code class= source >;http://naif.jpl.nasa.gov/pub/naif/toolkit//IDL/PC_Linux_GCC_IDL8.x_64bit/packages/icy.tar.Z ~/ominas_data/icy.tar.Z</code> <code class= source >;http://naif.jpl.nasa.gov/pub/naif/toolkit//IDL/PC_Linux_GCC_IDL8.x_64bit/packages/icy.tar.Z --localdir=/home/ominas_test_8/ominas_data/</code> <code class= source >;</code> <code class= source >;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</code> <code class= source >;Installation number: XXXXXX.</code> <code class= source >;Licensed for use by: XXXXXX</code> <code class= source >;</code> <code class= source >;% Compiled module: PP_WGETCL.</code> <code class= source >;% Compiled module: PP_COMMAND_LINE_ARGS_PARSE.</code> <code class= source >;% Loaded DLM: URL.</code> <code class= source >;% Compiled module: PP_WGET__DEFINE.</code> <code class= source >;util/downloader/ca-bundle.crt</code> <code class= source >;% Compiled module: PARSE_URL.</code> <code class= source >;downloading http://naif.jpl.nasa.gov/pub/naif/toolkit//IDL/PC_Linux_GCC_IDL8.x_64bit/packages/icy.tar.Z</code> <code class= source >;% Compiled module: PP_READABLESIZE.</code> <code class= source >;Content Length:  276.00000 B</code> <code class= source >;% Compiled module: PP_PARSE_DATE.</code> <code class= source >;% Compiled module: JULDAY.</code> <code class= source >;Content Length:  43.669736 MB</code> <code class= source >;% Compiled module: CALDAT.</code> <code class= source >;Extracting Icy source files...</code> <code class= source >;Compiling Icy...</code> <code class= source >;Icy compiled. Log is at ~/.ominas/icy_make.log</code> <code class= source >;writing /home/ominas_test_8/.ominas/ominas_setup.sh</code> <code class= source >;‘/home/ominas_test_8/.ominas/ominas_setup.sh’ -&gt; ‘/home/ominas_test_8/.ominas/ominas_setup_old.sh’</code> <code class= source >;</code> <code class= source >;</code> <code class= source >;</code> <code class= source >;</code> <code class= source >;</code> <code class= source >;</code> <code class= source >;done with writing /home/ominas_test_8/.ominas/ominas_setup.sh</code> <code class= source >;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</code> <code class= source >;Installation number: XXXXXX.</code> <code class= source >;Licensed for use by: XXXXXX</code> <code class= source >;</code> <code class= source >;% Compiled module: OMINAS_PATHS_ADD.</code> <code class= source >;Checking to see if IDL paths need to be changed...</code> <code class= source >;% Compiled module: IDLASTRO_DOWNLOAD.</code> <code class= source >;% Compiled module: ROUTINE_EXISTS.</code> <code class= source >;There are missing IDLAstro routines.</code> <code class= source >;Auto installing</code> <code class= source >;git clone https://github.com/wlandsman/IDLAstro.git /home/ominas_test_8/ominas_data/idlastro</code> <code class= source >;Cloning into '/home/ominas_test_8/ominas_data/idlastro'...</code> <code class= source >;remote: Counting objects: 1400, done.</code> <code class= source >;remote: Compressing objects: 100% (7/7), done.</code> <code class= source >;remote: Total 1400 (delta 1), reused 3 (delta 1), pack-reused 1392</code> <code class= source >;Receiving objects: 100% (1400/1400), 11.63 MiB | 4.85 MiB/s, done.</code> <code class= source >;Resolving deltas: 100% (556/556), done.</code> <code class= source >;Checking connectivity... done.</code> <code class= source >;IDLAstro path set in preferences:  &lt;IDL_DEFAULT&gt;:+/home/ominas_test_8/ominas_data/idlastro/pro</code> <code class= source >;OMINAS paths set in IDL preferences</code> <code class= source >;Icy path set in IDL preferences</code> <code class= source >;OMINAS aliase set in /home/ominas_test_8/.bashrc.</code> <code class= source >;OMINAS aliase set in /home/ominas_test_8/.bash_profile.</code> <code class= source >;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</code> <code class= source >;Installation number: 5502667.</code> <code class= source >;Licensed for use by: NASA - Jet Propulsion Laboratory</code> <code class= source >;</code> <code class= source >;% Compiled module: OMINAS_ICY_TEST.</code> <code class= source >;% Loaded DLM: ICY.</code> <code class= source >;Icy: /home/ominas_test_8/ominas_data/icy/lib/icy.so</code> <code class= source >;Current OMINAS configuration settings</code> <code class= source >;Required:</code> <code class= source >;1) OMINAS Core  . . . . . . . . . . . . .  CONFIGURED</code> <code class= source >;Contains the OMINAS code. If you select only one</code> <code class= source >;of the other packages, this will be included.</code> <code class= source >;Optional packages:</code> <code class= source >;2) Demo package . . . . . . . . . . . . .  CONFIGURED</code> <code class= source >;Contains the demo scripts and the data required</code> <code class= source >;to run then.</code> <code class= source >;These files are always present (in ominas/demo),</code> <code class= source >;this option is to set up the environment so that</code> <code class= source >;the demos can be run.</code> <code class= source >;3) SPICE Icy  . . . . . . . . . . . . . .  CONFIGURED</code> <code class= source >;Library maintained by JPL's NAIF (Navigation and Ancillary</code> <code class= source >;Information Facility, https://naif.jpl.nasa.gov/naif/toolkit.html,</code> <code class= source >;required to use spacecraft / planetary kernel files.</code> <code class= source >;</code> <code class= source >;Mission Packages:</code> <code class= source >;Kernels used for each mission's position and</code> <code class= source >;pointing data. If you do not already have them,</code> <code class= source >;an option to download them from PDS will be provided.</code> <code class= source >;If you already have them, you will need to provide</code> <code class= source >;the path to your kernel files.</code> <code class= source >;Note: the NAIF Generic Kernels (one of the optional</code> <code class= source >;data packages) are not required for the missions, they</code> <code class= source >;already contain a copy the subset of the generic kernel</code> <code class= source >;files they need.</code> <code class= source >;4) Cassini . . . . . . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;Subsetted, about 16 GB as of Dec/2016</code> <code class= source >;5) Galileo (GLL) . . . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;About 833 MB as of Dec/2016</code> <code class= source >;6) Voyager . . . . . . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;About 163 MB as of Dec/2016</code> <code class= source >;7) Dawn  . . . . . . . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;Subsetted, about 8 GB as of Jan/2017</code> <code class= source >;Data:</code> <code class= source >;8) NAIF Generic Kernels . . . . . . . . .  NOT CONFIGURED</code> <code class= source >;About 22 GB as of Dec/2016</code> <code class= source >;9) SEDR image data . . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;10) TYCHO2 star catalog . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;About 161 MB download, 665 MB unpacked</code> <code class= source >;11) SAO star catalog . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;About 19 MB download, 70 MB unpacked</code> <code class= source >;12) GSC star catalog . . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;13) UCAC4 star catalog . . . . . . . . . . NOT CONFIGURED</code> <code class= source >;About 8.5 GB download</code> <code class= source >;For more information, see</code> <code class= source >;https://nasa.github.io/ominas_doc/demo/install_guide.html</code> <code class= source >;Modify Current OMINAS configuration (Exit/Auto/Uninstall 1 2 ...)?  e</code> <code class= source >;Setup has completed. It is recommended to restart your terminal session before using OMINAS.</code> <code class= source >;You may want to try some of the tutorials at https://nasa.github.io/ominas_doc/demo/</code>   At this point, one can run a few tests of the enviroment: <code class= source > ;[ominas_test_8@cmp ominas]$ which ominas</code> <code class= source > ;alias ominas='/home/ominas_test_8/.ominas/ominas'</code> <code class= source > ;~/.ominas/ominas</code> <code class= source > ;[ominas_test_8@cmp ominas]$ which ominasde</code> <code class= source > ;alias ominasde='/home/ominas_test_8/.ominas/ominasde'</code> <code class= source > ;~/.ominas/ominasde</code>  Which shows both ominas and ominasde are defined. Use ominas to start and IDL  session in which to use OMINAS, and ominasde to start an IDL DE session in  which to use OMINAS.   Now, to check on the ominas_setup file, which sets the environment for the OMINAS  core and all currently set packages (in this example, only Core, Demo and Icy are set): <code class= source > ;[ominas_test_8@cmp ominas]$ cat ~/.ominas/ominas_setup.sh</code> <code class= source > ;#!/usr/bin/env bash</code> <code class= source > ;alias ominas=~/.ominas/ominas</code> <code class= source > ;alias ominasde=~/.ominas/ominasde</code> <code class= source > ;export OMINAS_DIR=/home/ominas_test_8/ominas</code> <code class= source > ;export DFLAG=true</code> <code class= source > ;source /home/ominas_test_8/ominas/config/ominas_env_def.sh</code> <code class= source > ;unset NV_Generic_kernels_DATA</code> <code class= source > ;unset NV_SEDR_DATA</code> <code class= source > ;unset NV_TYCHO2_DATA</code> <code class= source > ;unset NV_SAO_DATA</code> <code class= source > ;unset NV_GSC_DATA</code> <code class= source > ;unset NV_UCAC4_DATA</code>  Now, to check that the right environment is see from an OMINAS session: <code class= source > ;[ominas_test_8@cmp ominas]$ ominas -e 'spawn, env | grep NV '</code> <code class= source > ;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</code> <code class= source > ;Installation number: XXXXX.</code> <code class= source > ;Licensed for use by: XXXXX</code> <code class= source > ;</code> <code class= source > ;NV_TRANSLATORS=/home/ominas_test_8/ominas/config/tab/translators.tab:/home/ominas_test_8/ominas/demo/data/translators.tab</code> <code class= source > ;NV_CONFIG=/home/ominas_test_8/ominas/config</code> <code class= source > ;NV_IO=/home/ominas_test_8/ominas/config/tab/io.tab</code> <code class= source > ;NV_SPICE=/home/ominas_test_8/ominas/config/spice</code> <code class= source > ;NV_ORBIT_DATA=/home/ominas_test_8/ominas/config/orb/</code> <code class= source > ;NV_ARRAY_DATA=/home/ominas_test_8/ominas/config/arr/dat/</code> <code class= source > ;NV_TRANSFORMS=/home/ominas_test_8/ominas/config/tab/transforms.tab:/home/ominas_test_8/ominas/demo/data/transforms.tab</code> <code class= source > ;NV_STATION_DATA=/home/ominas_test_8/ominas/config/stn/</code> <code class= source > ;NV_RING_DATA=/home/ominas_test_8/ominas/config/rings/</code> <code class= source > ;NV_FTP_DETECT=/home/ominas_test_8/ominas/config/tab/filetype_detectors.tab</code> <code class= source > ;NV_SPICE_KER=::/home/ominas_test_8/ominas/demo/data</code> <code class= source > ;NV_INS_DETECT=/home/ominas_test_8/ominas/config/tab/instrument_detectors.tab:/home/ominas_test_8/ominas/demo/data/instrument_detectors.tab</code>  Now, to check that the OMINAS paths show up inside an OMINAS IDL session: <code class= source > ;[ominas_test_8@cmp ominas]$ ominas -e 'print,pref_get( IDL_PATH )'</code> <code class= source > ;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</code> <code class= source > ;Installation number: XXXXX.</code> <code class= source > ;Licensed for use by: XXXXX</code> <code class= source > ;</code> <code class= source > ;&lt;IDL_DEFAULT&gt;:+/home/ominas_test_8/ominas_data/idlastro/pro:+/home/ominas_test_8/ominas_data/icy/lib:+/home/ominas_test_8/ominas:+/home/ominas_test_8/ominas/util/xidl</code> <code class= source > ;[ominas_test_8@cmp ominas]$ ominas -e 'print,pref_get( IDL_DLM_PATH )'</code> <code class= source > ;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</code> <code class= source > ;Installation number: XXXXX.</code> <code class= source > ;Licensed for use by: XXXXX</code> <code class= source > ;</code> <code class= source > ;&lt;IDL_DEFAULT&gt;:+/home/ominas_test_8/ominas_data/icy/lib</code>  With this environment, one can run some demo scripts, such as: <code class= source > ;ominas override_example</code> <code class= source > ;ominas pg_example</code>     Testing the environment with ominas_env_info         OMINAS includes a utilty script that prints out the most commonly relevant about your OMINAS environment, which can be useful for debugging        (both for yourself, and when you send us questions). It can be run by calling ominas_env_info, from an ominas/ominasde session. If an argument        is provided, it will be the filename where the output will be saved into (as opposed to printing it to the console). One example: <code class= source > ;[user@cmp ~]$ ominas</code> <code class= source > ;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</code> <code class= source > ;Installation number: XXXXXX.</code> <code class= source > ;Licensed for use by: XXXXXX</code> <code class= source > ;</code> <code class= source > ;IDL&gt; ominas_env_info,'~/ominas_env_info.txt'</code>        Which produces: <code class= source > ;OMINAS variables:</code> <code class= source > ;OMINAS_RC=/home/user/.ominas</code> <code class= source > ;OMINAS_DEMO=/home/user/ominas/demo</code> <code class= source > ;OMINAS_DIR=/home/user/ominas</code> <code class= source > ;OMINAS_DATA=/home/user/ominas_data</code> <code class= source > ;--------------------------------------------------------------------------------</code> <code class= source > ;NV variables:</code> <code class= source > ;NV_TRANSLATORS=/home/user/ominas/config/tab/translators.tab:/home/user/ominas/demo/data/translators.tab</code> <code class= source > ;NV_CONFIG=/home/user/ominas/config</code> <code class= source > ;NV_IO=/home/user/ominas/config/tab/io.tab</code> <code class= source > ;NV_SPICE=/home/user/ominas/config/spice</code> <code class= source > ;NV_ORBIT_DATA=/home/user/ominas/config/orb/</code> <code class= source > ;NV_ARRAY_DATA=/home/user/ominas/config/arr/dat/</code> <code class= source > ;NV_TRANSFORMS=/home/user/ominas/config/tab/transforms.tab:/home/user/ominas/demo/data/transforms.tab</code> <code class= source > ;NV_STATION_DATA=/home/user/ominas/config/stn/</code> <code class= source > ;NV_RING_DATA=/home/user/ominas/config/rings/</code> <code class= source > ;NV_FTP_DETECT=/home/user/ominas/config/tab/filetype_detectors.tab</code> <code class= source > ;NV_SPICE_KER=::/home/user/ominas/demo/data</code> <code class= source > ;NV_INS_DETECT=/home/user/ominas/config/tab/instrument_detectors.tab:/home/user/ominas/demo/data/instrument_detectors.tab</code> <code class= source > ;--------------------------------------------------------------------------------</code> <code class= source > ;ominas_setup.sh:</code> <code class= source > ;#!/usr/bin/env bash</code> <code class= source > ;alias ominas=~/.ominas/ominas</code> <code class= source > ;alias ominasde=~/.ominas/ominasde</code> <code class= source > ;export OMINAS_DIR=/home/user/ominas</code> <code class= source > ;export OMINAS_DATA=/home/user/ominas_data</code> <code class= source > ;export OMINAS_RC=/home/user/.ominas</code> <code class= source > ;export DFLAG=true</code> <code class= source > ;source /home/user/ominas/config/ominas_env_def.sh</code> <code class= source > ;unset NV_Generic_kernels_DATA</code> <code class= source > ;unset NV_SEDR_DATA</code> <code class= source > ;unset NV_TYCHO2_DATA</code> <code class= source > ;unset NV_SAO_DATA</code> <code class= source > ;unset NV_GSC_DATA</code> <code class= source > ;unset NV_UCAC4_DATA</code> <code class= source > ;--------------------------------------------------------------------------------</code> <code class= source > ;</code> <code class= source > ;IDL:</code> <code class= source > ;** Structure !VERSION, 8 tags, length=104, data length=100:</code> <code class= source > ;   ARCH            STRING    'x86_64'</code> <code class= source > ;   OS              STRING    'linux'</code> <code class= source > ;   OS_FAMILY       STRING    'unix'</code> <code class= source > ;   OS_NAME         STRING    'linux'</code> <code class= source > ;   RELEASE         STRING    '8.5.1'</code> <code class= source > ;   BUILD_DATE      STRING    'Nov 14 2015'</code> <code class= source > ;   MEMORY_BITS     INT             64</code> <code class= source > ;   FILE_OFFSET_BITS</code> <code class= source > ;                   INT             64</code> <code class= source > ;--------------------------------------------------------------------------------</code> <code class= source > ;environment IDL_PATH</code> <code class= source > ;</code> <code class= source > ;--------------------------------------------------------------------------------</code> <code class= source > ;environment IDL_DLM_PATH</code> <code class= source > ;</code> <code class= source > ;--------------------------------------------------------------------------------</code> <code class= source > ;preferences IDL_PATH</code> <code class= source > ;&lt;IDL_DEFAULT&gt;:+/home/user/ominas_data/idlastro/pro:+/home/user/ominas:+/home/user/ominas/util/xidl:+/home/user/ominas_data/icy/lib</code> <code class= source > ;--------------------------------------------------------------------------------</code> <code class= source > ;preferences IDL_DLM_PATH</code> <code class= source > ;&lt;IDL_DEFAULT&gt;:+/home/user/ominas_data/icy/lib</code> <code class= source > ;--------------------------------------------------------------------------------</code> <code class= source > ;</code> <code class= source > ;Icy:</code> <code class= source > ;--------------------------------------------------------------------------------</code> <code class= source > ;** ICY - IDL/CSPICE interface from JPL/NAIF (not loaded)</code> <code class= source > ;    Version: 1.8.0, Build Date: 05-JAN-2017, Source: ed.wright@jpl.nasa.gov</code> <code class= source > ;    Path: /home/user/ominas_data/icy/lib/icy.so</code> <code class= source > ;--------------------------------------------------------------------------------</code> <code class= source > ;CSPICE_N0066</code> <code class= source > ;--------------------------------------------------------------------------------</code> <code class= source > ;0 loaded kernels:</code> <code class= source > ;--------------------------------------------------------------------------------</code> <code class= source > ;</code> <code class= source > ;OMINAS repository:</code> <code class= source > ;On branch master</code> <code class= source > ;Your branch is up-to-date with 'origin/master'.</code> <code class= source > ;Last commit:</code> <code class= source > ;b373f70 Paulo Penteado Wed Jun 14 14:03:42 2017 -0700</code>   	Troubleshooting  	This section outlines several common sources of error that are due to 	OMINAS being configured incorrectly.  	Note that OMINAS' diagnostic output may be controlled using the  verbosity  	keyword to nv_message, e.g.: <code class= source > nv_message, verbosity=0.5</code> 	Verbosity levels range from 0 to 1, with 0 being the least and 1 being 	the most verbose.  Verbosity may also be controlled using the NV_VERBOSITY 	environment variable.  	One of the most common configuration problems manifests as this error: <code class= source > % CSPICE_STR2ET: SPICE(NOLEAPSECONDS): [str2et_c-&gt;STR2ET-&gt;TTRANS] The variable that points to the leapseconds (DELTET/DELTA_AT)</code> <code class= source >                 could not be located in the kernel pool.  It is likely that the leapseconds kernel has not been loaded via</code> <code class= source >                 the routine FURNSH.</code> 	This error comes from the Icy toolkit. It specifically refers to the Leap 	Second Kernel file, however, as the lsk is usually the first kernel which 	is loaded, this error generally means that no kernels are being loaded.  	You can check which kernels have been loaded by entering the following 	IDL command: <code class= source > print, spice_loaded(/verb)</code> 	A list will be populated with the currently loaded SPICE kernels, and 	their load order. If no kernels are loaded, then it is likely that a bad 	path was supplied to the kernel pools. Ensure that the kernel pool was 	successfully entered into the environemnt by using the  env  command at 	the shell prompt. The kernel pool variable names follow a convention 	like so: &lt;MIS&gt;_SPICE_&lt;*K&gt;, where &lt;MIS&gt; is the abbreviated mission name, 	and &lt;*K&gt; is the type of kernel. Therefore, for Cassini, the IDL command: <code class= source > spawn, env | grep CAS_SPICE </code> 	will list the path to directories containing each type of Cassini kernel. 	If the variables are not present, the easiest fix might be to run the OMINAS 	installer again  	 source configure.sh  	From the ominas directory. Then, if the Cassini package shows as installed, 	select that option at the menu (4), to uninstall it. You will be presented with 	the possibility of preserving files the OMINAS installer previously downloaded, 	or deleting them. After the uninstallation is complete, you will be returned to 	the installer menu, and Cassini should show as not configured. Then select the Cassini 	option to set it up again.  	In some cases, a demo script will run and no error will appear to occur, 	but no pointing will be overlayed on the image. This error generally occurs 	due to the PCK kernels not being loaded or the CK kernels not being loaded 	in the correct order.  	When the frame kernel (FK) is not being loaded correctly for an image, 	Icy will return the following error: <code class= source > % CSPICE_PXFORM: SPICE(EMPTYSTRING): [pxform_c] String  from  has length zero.</code> 	If Icy is not installed, and a script is run, something similar to the 	following error may occur: <code class= source > % Attempt to call undefined procedure: 'CSPICE_STR2ET'.</code> 	In general, the undefined procudure may have any cspice prefix. Icy is 	either not configured correctly, or not installed. In IDL, check that 	the Icy path has been added to the IDL path as follows: <code class= source > path = pref_get('IDL_PATH')</code> <code class= source > print, path</code> <code class= source > dlm_path = pref_get('IDL_DLM_PATH')</code> <code class= source > print, dlm_path</code> 	The path variable should appear as a colon-separated list with 	&lt;IDL_DEFAULT&gt; as the first entry. Check that both Icy and OMINAS 	directories are added to the IDL_PATH, and that Icy is added to the 	IDL_DLM_PATH. If either Icy or OMINAS are not present, the best way to fix 	it probably is to get back into the OMINAS directory and run the configure.sh 	script to uninstall/install the Core, Demo or Icy packages again.   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./install_guide.html#install_guide", "install_guide", 'routine in <a href="./install_guide.html">install_guide.pro</a>', "install_guide.pro", "", "install_guide", "", "", "          -1", "");
  
  

